
// Generator for package.json (to allow some more convenient syntax, e.g. comments)
// Usage:
// $ node package.json.js > package.json

const packageConfig = {
  private: true,
  name: '@fortanix/alton-frontend',
  version: '0.0.0',
  description: 'Fortanix Alton',
  author: 'Fortanix',
  repository: 'https://bitbucket.org/fortanix/alton-frontend',
  
  // http://2ality.com/2017/04/setting-up-multi-platform-packages.html
  main: 'lib-cjs/app.js', // Node-compatible version (needs to use CommonJS modules)
  
  scripts: {
    // Environment
    'update-package': `node package.json.js > package.json`,
    
    // REPL
    'repl': 'esno',
    
    // Build
    'build:prod': 'vite --config=./vite.config.ts build',
    
    // Serve
    'serve:dev': 'vite --config=./vite.config.ts serve',
    'preview:prod': 'vite --config=./vite.config.ts preview',
    
    // Static analysis
    'check-types': 'tsc --noEmit',
    
    // Test
    // Note: use `vitest run --root=. src/...` to run a single test file
    'test': 'vitest run --root=. --dir=src',
    'test-ui': 'vitest --ui --dir=src',
    'coverage': 'vitest run --coverage --dir=src',
    'test-integration': 'vitest run --dir=src/sdk/roche',
    
    // Hooks
    // XXX this does not seem to work anymore as of npm v7+, `preinstall` runs after `install`
    // https://github.com/npm/cli/issues/2660
    //'preinstall': `npm run update-package`, // Update package.json before installing
    // Workaround for above `preinstall` bug: use `npm run install-deps`
    'install-fix': 'npm run update-package && npm install',
  },
  
  // Dev dependencies (only needed when building, or making changes to the code)
  devDependencies: {
    // CLI
    'jjo': '^1.2.1',
    'esno': '^0.16.3',
    
    // Build
    'vite': '^4.0.4',
    '@vitejs/plugin-react': '^3.0.1',
    'rollup-plugin-node-builtins': '^2.1.2',
    'rollup-plugin-node-globals': '^1.4.0',
    'sass': '^1.57.1',
    
    // Static analysis
    'typescript': '^4.9.4',
    'ts-node': '^10.8.0',
    
    // Testing
    'vitest': '^0.27.1',
    '@vitest/ui': '^0.27.1',
    'c8': '^7.12.0',
    '@ngneat/falso': '^6.4.0',
  },
  
  // Dependencies needed when running the generated build
  dependencies: {
    // Generic utilities
    'ts-dedent': '^2.2.0',
    'message-tag': '^0.8.0',
    'uri-tag': '^1.4.1',
    'path-to-regexp': '^6.2.1',
    'js-base64': '^3.7.4',
    'date-fns': '^2.29.3',
    'date-fns-tz': '^1.3.7',
    'http-status-codes': '^2.2.0',
    'axios': '^1.2.2',
    'zod': '^3.20.2',
    'deepmerge': '^4.2.2',
    
    // React
    'react': '^18.0.0',
    '@types/react': '^18.0.26',
    'react-dom': '^18.0.0',
    '@types/react-dom': '^18.0.10',
    'react-error-boundary': '^3.1.4',
    'react-table': '^7.8.0',
    '@types/react-table': '^7.7.14',
    'react-hook-form': '^7.42.0',
    '@hookform/resolvers': '^2.9.10',
    'react-query': '^3.39.0',
    'react-router-dom': '^6.6.2',
    'react-toastify': '^9.1.1',
  },
};

const packageConfigWithComment = {
  // http://stackoverflow.com/questions/14221579/how-do-i-add-comments-to-package-json
  '//': 'NOTE: This is a generated file. Do not edit this file directly, use package.json.js instead.',
  
  ...packageConfig,
};

// Output a valid JSON document (stripped of comments and such)
process.stdout.write(JSON.stringify(packageConfigWithComment, null, 2) + '\n'); // eslint-disable-line
